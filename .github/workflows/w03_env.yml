name: w03_env demo using env context
on:
  workflow_dispatch
env:  
  globalvar: globalvar_value
jobs:
  job1:
    name: j1 use env context in a job
    runs-on: ubuntu-latest
    env: 
      jobvar: jobvar_value
    steps:
      - name: update env variables
        env: 
          stepvar1: stepvar1_value
          stepvar2: stepvar2_value
        run: |
          echo 'stepvar1, stepvar2, jobvar, and globalvar all are available in this step'
          echo 'we can access env vars with or without env context prefix:'
          echo $stepvar1 $jobvar $globalvar 
          echo ${{ env.stepvar1 }} ${{ env.jobvar }} ${{ env.globalvar }}
          echo let us pdate values
          echo The following updates the value of stepvar1 but its scope will not change
          stepvar1=stepvar1_new_value
          echo The updated values will be available in the next step, not this step:
          echo ${{env.stepvar1}}
          echo pushing the var to the env file GITHUB_ENV changes the scope from step to job level
          echo "stepvar2=stepvar2_new_value >> $GITHUB_ENV"
          echo change other variables
          jobvar=jobvar_new_value
          globalvar=globalvar_new_value        
      - name: test updated env variables 
       # if: ${{ env.stepvar == 'stepvar_new' }} # we must accesss env vars using env context when outside a run
       # if: $stepvar == stepvar_new #     this will not work
       # if: ${{$stepvar == stepvar_new}} #     this will not work either
        run: |
          echo ${{ env.stepvar1 }} 
          echo {{ env.stepvar2 }} 
          echo ${{ env.jobvar }} 
          echo ${{ env.globalvar }}  
  job2:
    name: j2 show env vars behaviour across jobs
    runs-on: ubuntu-latest
    # Tocheck if the previous job has any effect on env context, we want job1 to finish before we strt this job
    needs: job1
    steps:
      - name: test env variables
        run: |
          echo stepvar and jobvar are not available acrosss jobs because each job executes with its own env context
          echo global variable is available but the update done in another job will not affect it.
          echo ${{ env.stepvar1 }} 
          echo {{ env.stepvar2 }} 
          echo ${{ env.jobvar }} 
          echo ${{ env.globalvar }} 
      - name: GITHUB_ENV and github.env are the same
        run: |
          echo they give path of the file that stores env variables, this path is unique for each step
          echo $GITHUB_ENV 
          echo ${{github.env}} 
          echo done with reusable workflow 
